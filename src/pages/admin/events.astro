---
import { PrismaClient } from "@prisma/client";
import Layout from "../../layouts/Layout.astro";

const prisma = new PrismaClient();

// Events abrufen
const events = await prisma.event.findMany();

// Event speichern (Erstellen oder Aktualisieren)
if (Astro.request.method === "POST") {
	const formData = await Astro.request.formData();
	const id = formData.get("id")?.toString();
	const data = {
		title: formData.get("title")?.toString() || "",
		date: new Date(formData.get("date")?.toString() || Date.now()),
		location: formData.get("location")?.toString() || "",
		description: formData.get("description")?.toString() || "",
		image: formData.get("image")?.toString() || "",
		slug: formData.get("slug")?.toString() || "",
	};

	if (id) {
		await prisma.event.update({ where: { id: Number(id) }, data });
	} else {
		await prisma.event.create({ data });
	}

	Astro.redirect("/admin/events");
}

// Event löschen
if (Astro.request.method === "DELETE") {
	const formData = await Astro.request.formData();
	const id = formData.get("id")?.toString();

	if (id) {
		await prisma.event.delete({ where: { id: Number(id) } });
	}

	Astro.redirect("/admin/events");
}
---

<Layout title="Admin Panel" defaultPadding={true}>
	
	<section class="mx-auto max-w-4xl py-12">
		<h1 class="mb-6 text-3xl font-bold">Event Manager</h1>

		<!-- Formular für Event hinzufügen / bearbeiten -->
		<form method="POST" class="mb-6 rounded-md bg-gray-100 p-6">
			<input type="hidden" name="id" id="event-id" />
			<input
				type="text"
				name="title"
				placeholder="Title"
				required
				class="mb-2 block w-full border p-2"
			/>
			<input
				type="date"
				name="date"
				required
				class="mb-2 block w-full border p-2"
			/>
			<input
				type="text"
				name="location"
				placeholder="Location"
				required
				class="mb-2 block w-full border p-2"
			/>
			<input
				type="text"
				name="description"
				placeholder="Description"
				required
				class="mb-2 block w-full border p-2"
			/>
			<input
				type="text"
				name="image"
				placeholder="Image URL"
				class="mb-2 block w-full border p-2"
			/>
			<input
				type="text"
				name="slug"
				placeholder="Slug"
				required
				class="mb-2 block w-full border p-2"
			/>
			<button type="submit" class="bg-blue-600 px-4 py-2 text-white"
				>Save</button
			>
		</form>

		<!-- Event Liste -->
		<ul class="mt-6">
			{
				events.map((event) => (
					<li
						class="flex justify-between bg-white p-4 shadow-md"
						{...{ key: event.id }}
					>
						<span>
							{event.title} -{" "}
							{event.date.toISOString().split("T")[0]}
						</span>
						<div>
							<button
								class="bg-yellow-500 px-2 py-1"
								onclick={`document.getElementById('event-id').value = '${event.id}';`}
							>
								Edit
							</button>

							<form
								method="POST"
								onsubmit="return confirm('Event wirklich löschen?');"
								class="inline-block"
							>
								<input
									type="hidden"
									name="_method"
									value="DELETE"
								/>
								<input
									type="hidden"
									name="id"
									value={event.id}
								/>
								<button
									type="submit"
									class="bg-red-600 px-2 py-1"
								>
									Delete
								</button>
							</form>
						</div>
					</li>
				))
			}
		</ul>
	</section>
</Layout>
