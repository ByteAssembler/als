---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
import Footer from "../../../components/Footer.astro";
import FormattedDate from "../../../components/FormattedDate.astro";
import db from "../../../utils/db";

const { slug, lang } = Astro.params;
const post = await db.post.findUnique({
	where: { slug },
	include: { author: true },
});

if (!post) {
	return Astro.redirect("/404");
}
---

<Layout title={post.title}>
	<Header />
	<main class="mx-auto mt-10 max-w-4xl px-6 py-16 pt-10 sm:px-8 lg:px-12">
		<article class="prose lg:prose-xl mx-auto">
			<div class="mb-12 space-y-6 rounded-xl bg-gray-100 p-8 shadow-lg">
				<h1 class="text-5xl font-bold leading-tight text-gray-900">
					{post.title}
				</h1>

				<div class="flex items-center space-x-4 text-sm text-gray-600">
					<img
						src={post.author.avatar}
						alt={post.author.name}
						class="h-12 w-12 rounded-full shadow-md"
					/>
					<span class="font-medium">{post.author.name}</span>
					<span>•</span>
					<FormattedDate date={post.publishedAt} />
					{
						post.updatedAt &&
							post.publishedAt !== post.updatedAt && (
								<span class="ml-2 text-gray-500">
									(Aktualisiert am{" "}
									<FormattedDate date={post.updatedAt} />)
								</span>
							)
					}
				</div>

				{
					post.coverImage && (
						<img
							src={post.coverImage}
							alt={post.title}
							class="h-80 w-full rounded-lg object-cover shadow-md"
						/>
					)
				}
			</div>

			<div class="prose prose-lg prose-blue max-w-none leading-relaxed">
				{post.content}
			</div>

			<div
				class="mt-12 flex items-center justify-between border-t border-gray-300 pt-6"
			>
				<a
					href={`/${lang}/#blogs`}
					class="font-medium text-blue-600 hover:text-blue-800"
				>
					← Zurück zur Übersicht
				</a>
			</div>
		</article>
	</main>
	<Footer />
</Layout>
